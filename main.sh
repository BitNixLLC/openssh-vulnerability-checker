#!/bin/bash
vulnerable_versions=(
    'SSH-2.0-OpenSSH_1'
    'SSH-2.0-OpenSSH_2'
    'SSH-2.0-OpenSSH_3'
    'SSH-2.0-OpenSSH_4.0'
    'SSH-2.0-OpenSSH_4.1'
    'SSH-2.0-OpenSSH_4.2'
    'SSH-2.0-OpenSSH_4.3'
    'SSH-2.0-OpenSSH_4.4'
    'SSH-2.0-OpenSSH_8.5'
    'SSH-2.0-OpenSSH_8.6'
    'SSH-2.0-OpenSSH_8.7'
    'SSH-2.0-OpenSSH_8.8'
    'SSH-2.0-OpenSSH_8.9'
    'SSH-2.0-OpenSSH_9.0'
    'SSH-2.0-OpenSSH_9.1'
    'SSH-2.0-OpenSSH_9.2'
    'SSH-2.0-OpenSSH_9.3'
    'SSH-2.0-OpenSSH_9.4'
    'SSH-2.0-OpenSSH_9.5'
    'SSH-2.0-OpenSSH_9.6'
    'SSH-2.0-OpenSSH_9.7'
)
is_installed() {
    dpkg -l | grep -i "$1" > /dev/null 2>&1 || rpm -qa | grep -i "$1" > /dev/null 2>&1
}
get_openssh_version() {
    ssh -V 2>&1 | awk '{print $1}'
}
is_vulnerable_version() {
    local version="$1"
    for vulnerable_version in "${vulnerable_versions[@]}"; do
        if [[ "$version" == "$vulnerable_version" ]]; then
            return 0
        fi
    done
    return 1
}
if [ "$EUID" -ne 0 ]; then
    echo "This script must be run as root. Trying to use sudo..."
    exec sudo "$0" "$@"
fi
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
elif [ -f /etc/redhat-release ]; then
    OS="rhel"
elif [ -f /etc/debian_version ]; then
    OS="debian"
else
    OS=$(uname -s)
fi
if ! is_installed "openssh-server"; then
    echo "openssh-server is not installed. Exiting."
    exit 1
fi
current_version=$(get_openssh_version)
echo "Current version of openssh-server: $current_version"
if is_vulnerable_version "$current_version"; then
    echo "openssh-server is vulnerable. Updating..."
    case "$OS" in
        ubuntu|debian)
            apt-get update && apt-get install -y --only-upgrade openssh-server
            ;;
        rhel|centos|fedora)
            yum update -y openssh-server
            ;;
        suse)
            zypper update -y openssh
            ;;
        *)
            echo "openssh-server is vulnerable but the OS $OS is unsupported for automatic update."
            exit 3
            ;;
    esac
    new_version=$(get_openssh_version)
    echo "openssh-server has been updated to version $new_version."
    exit 0
else
    echo "false"
    exit 0
fi
